name: 'Build and Deploy App'

on:
    push:
        tags:
            - 'v-*'

jobs:
    deploy:
        name: Deploy Production App
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use NodeJS 16
              uses: actions/setup-node@v2
              with:
                  node-version: '16'

            - name: Set env file
              env:
                  ENV: ${{ secrets.PROD_ENV }}
              run: cd $GITHUB_WORKSPACE/server && echo "$ENV" >| .env

            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1

            - name: Build and push
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/tcc-production:latest

            - name: Image digest
              run: echo ${{ steps.docker_build.outputs.digest }}

            - name: Pull and run docker container on Droplet
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      docker pull tamsclubcalendar/tcc-production:latest
                      docker stop production
                      docker run --rm -d --name production -p 8082:80 -p 8084:90 tamsclubcalendar/tcc-production
                      docker image prune -af
